// need to design for mobile layout first
//then using @media we can use media queires to change the screen when it grows larger

@mixin centerPhotos(){
    display: block;
    margin-left: auto;
    margin-right: auto;
}
@mixin reactivePhotos(){
    max-width: 100%;
     height: auto;
}

@media only screen and (min-width: 442px){
   body{
    background-color: greenyellow; ///to see change 
   }
   header{
       height: 320px !important; //use !important to replace code, Since media quieres doesnt "Change code", it adds the code the the previous code  
    }
}
//NEXT WILL BE 608px change height of header, etc
img{
    display:block;
}

.wrapper{
    margin-top: 3.5em;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;

}

header{
    grid-column: 1/4;
    background-image: url("pool.gif");
    background-repeat: no-repeat;
    background-size: 100%;
    background-position: 50%;
    height: 230px;
    text-align: center;
    // USE THIS FOR MEDIA QUIERY: 
    background-color:#f0eef3;
}

.howitworks{
    grid-column: 1/4;
    text-align: center;
    display: grid;
    grid-template-columns: 1fr; //FOR LARGE DISPLAY USE 2 colums, the bigger colum is for the phone
    text-align: center;
    grid-row-gap: 2rem;
    
    @for $i from 1 through 3{
        .picture-#{$i}{ /*this assumes the name of class is .picture-#. # being a num in our loop, so that we can 
            apply the same effect to multiple objects with different names*/
            @include centerPhotos();   
            @include reactivePhotos();
        }  
        
        @if ($i == 3 ){ //checks to see if i equals 3 and if it is, then we change the opacity of the picture
        .picture-#{$i}{
            opacity: 0.8;
        }
    }
    }


}

h1{
    font-family: 'Fredoka One', cursive;
}
h5,h6{
   font-family: 'Cantarell', sans-serif;
    }
    